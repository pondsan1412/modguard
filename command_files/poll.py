import discord
from discord.ext import commands

class Poll(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @commands.hybrid_command()
    async def poll(self, ctx: commands.Context, question, *choices: str):
        if len(choices) > 10:
            await ctx.send("‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 10 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
            return
        
        emojis = ['1Ô∏è‚É£', '2Ô∏è‚É£', '3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£', '7Ô∏è‚É£', '8Ô∏è‚É£', '9Ô∏è‚É£', 'üîü']
        
        embed = discord.Embed(title="‡πÇ‡∏õ‡∏£‡∏î‡πÇ‡∏´‡∏ß‡∏ï", description=question, color=discord.Color.blue())
        
        for i in range(len(choices)):
            embed.add_field(name=f"{emojis[i]} {choices[i]}", value="\u200b", inline=False)
        
        message = await ctx.send(embed=embed)
        
        for i in range(len(choices)):
            await message.add_reaction(emojis[i])
        
        def check(reaction, user):
            return user == ctx.author and reaction.message.id == message.id and str(reaction.emoji) in emojis[:len(choices)]
        
        while True:
            reaction, user = await self.bot.wait_for('reaction_add', check=check)
            if reaction.count >= 3:
                winner_index = emojis.index(str(reaction.emoji))
                await ctx.send(f"‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å `{choices[winner_index]}` ‡∏ä‡∏ô‡∏∞!")
                break

async def setup(bot):
    await bot.add_cog(Poll(bot))
